buildscript {
    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
        classpath "com.github.dcendents:android-maven-gradle-plugin:2.1"
        classpath "com.github.dcendents:android-maven-plugin:1.2"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//////////////////////////////// Upload to BinTray ////////////////////////////////
group = "io.scal"
final def siteUrl = 'https://github.com/scalio/command-based-architecture'
final def gitUrl = "https://github.com/scalio/command-based-architecture.git"
// This is the library version used when deploying the artifact
version = "0.0.9"

final Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ["archives"]
    pkg {
        repo = "android-maven"
        name = "command-based-architecture-rxjava"
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'

            // Add your description here
            name "Command Based Architecture for simple synchronization logic. Description is here: https://github.com/scalio/command-based-architecture"
            url siteUrl

            // Set your license
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id 'mig35'
                    name 'Mikhail Gurevich'
                    email 'mig35@mig35.com'
                }
                developer {
                    id 'scalio'
                    name 'Scalio'
                    url 'https://scal.io'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}
//////////////////////////////// Upload to BinTray ////////////////////////////////


android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.18'

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.architectureComponentsVersion}"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}

artifacts {
    archives sourcesJar
}

// Excluding aar artifacts from uploading
configurations.archives.artifacts.with { archives ->
    for (def iter = archives.iterator(); iter.hasNext();) {
        if (iter.next().file =~ 'aar') iter.remove();
    }
}